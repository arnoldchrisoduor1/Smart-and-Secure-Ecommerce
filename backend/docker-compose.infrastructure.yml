services:
  # Shared Redis for token blacklist
  redis:
    image: redis:7-alpine
    container_name: shared_redis
    command: redis-server --requirepass ecommerce_redis_pass
    ports:
      - "6379:6379"  # Use default port
    volumes:
      - shared_redis_data:/data
    networks:
      - ecommerce_network

  # Shared Kafka
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: shared_kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - ecommerce_network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - ecommerce_network

  # Auth service database (independent)
  auth_postgres:
    image: postgres:15-alpine
    container_name: auth_postgres
    environment:
      POSTGRES_DB: auth_db
      POSTGRES_USER: auth_service
      POSTGRES_PASSWORD: auth_service_pass
    ports:
      - "5433:5432"
    volumes:
      - auth_postgres_data:/var/lib/postgresql/data
    networks:
      - ecommerce_network


  catalog_postgres:
    image: postgres:15-alpine
    container_name: catalog_postgres
    environment:
      POSTGRES_DB: catalog_db
      POSTGRES_USER: catalog_service
      POSTGRES_PASSWORD: catalog_service_pass
    ports:
      - "5434:5432"
    volumes:
      - catalog_postgres_data:/var/lib/postgresql/data
    networks:
      - ecommerce_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U catalog_service -d catalog_db"]
      interval: 10s
      timeout: 5s
      retries: 5


  cart_postgres:
    image: postgres:15-alpine
    container_name: cart_postgres
    environment:
      POSTGRES_DB: cart_db
      POSTGRES_USER: cart_service
      POSTGRES_PASSWORD: cart_service_pass
    ports:
      - "5435:5432"
    volumes:
      - cart_postgres_data:/var/lib/postgresql/data
    networks:
      - ecommerce_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cart_service -d cart_db"]
      interval: 10s
      timeout: 5s
      retries: 5


  order_postgres:
    image: postgres:15-alpine
    container_name: order_postgres
    environment:
      POSTGRES_DB: order_db
      POSTGRES_USER: order_service
      POSTGRES_PASSWORD: order_service_pass
    ports:
      - "5436:5432"
    volumes:
      - order_postgres_data:/var/lib/postgresql/data
    networks:
      - ecommerce_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U order_service -d order_db"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  shared_redis_data:
  auth_postgres_data:
  catalog_postgres_data:
  cart_postgres_data:
  order_postgres_data:

networks:
  ecommerce_network:
    driver: bridge