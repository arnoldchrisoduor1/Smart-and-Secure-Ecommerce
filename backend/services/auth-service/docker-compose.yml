services:
  auth-service:
    build:
      context: ../../
      dockerfile: services/auth-service/Dockerfile
      target: production
    container_name: auth-service
    ports:
      - "${PORT:-3001}:3001"
    env_file:
      - .env.docker
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://auth_service:auth_service_pass@postgres:5432/auth_db
      - REDIS_URL=redis://:ecommerce_redis_pass@redis:6379
      - KAFKA_BROKER=kafka:9092
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - postgres
      - redis
      - kafka
    networks:
      - ecommerce_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  postgres:
    image: postgres:15-alpine
    container_name: auth_postgres
    environment:
      POSTGRES_DB: auth_db
      POSTGRES_USER: auth_service
      POSTGRES_PASSWORD: auth_service_pass
    ports:
      - "5433:5432"
    volumes:
      - auth_postgres_data:/var/lib/postgresql/data
    networks:
      - ecommerce_network

  redis:
    image: redis:7-alpine
    container_name: auth_redis
    command: redis-server --requirepass ecommerce_redis_pass
    ports:
      - "6380:6379"
    volumes:
      - auth_redis_data:/data
    networks:
      - ecommerce_network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - ecommerce_network

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1 # This line is now guaranteed to have correct indentation
    networks:
      - ecommerce_network

volumes:
  auth_postgres_data:
  auth_redis_data:

networks:
  ecommerce_network:
    external: true
